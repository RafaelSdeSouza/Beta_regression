burnin=20000,
sample=50000,
summarise=FALSE,
thin=5,
plots=FALSE
)
jagssamples.nb <- as.mcmc.list(jags.neg )
scale_fill_economist()+
)
Pred<-ggs(jagssamples.nb,family=c("New"))[,"value"]
Obs<-ggs(jagssamples.nb,family=c("Fit"))[,"value"]
sqrt(mean((Pred-Obs)^2))
# Dispersion parameter
require(scales)
Pres<-summary(as.mcmc.list(jags.neg, vars="PRes"),quantiles=0.5)$quantiles
Dipersion = sum(Pres^2)/(N-3)# beta.0, beta.1 and k, 3 parameters
Dipersion
jags.DIC <- jags.model(
data = jags.data,
inits = inits1,
textConnection(model.NB),
n.chains = 3,
n.adapt=2000
)
update(jags.DIC , 10000)
dicsamples.nb <- dic.samples(jags.DIC, params, n.iter = 25000,type="pD")
dicsamples.nb
975-25
995-5
citation(package = "rjags")
exp(2.19)
require(AMADA)
install_github("RafaelSdeSouza/AMADA")
require(devtools)
install_github("RafaelSdeSouza/AMADA")
require(AMADA)
require(AMADA)
corr<-Corr_MIC(SNIa,"pearson")
Fig1<-plotdendrogram(corr,"phylogram")
data("SNIa")
corr<-Corr_MIC(SNIa,"pearson")
Fig1<-plotdendrogram(corr,"phylogram")
install_github("RafaelSdeSouza/AMADA",dependencies=TRUE)
require(devtools)
install_github("RafaelSdeSouza/AMADA",dependencies=TRUE)
help("AMADA")
?AMADA
?"AMADA"
vignette("AMADA")
R CMD Rd2pdf AMADA
library(help="AMADA")
help("AMADA")
help(package="AMADA")
N = 10
M= 3
matrix(rnorm(N*M,mean=0,sd=1), N, M)
N = 100
M= 1000
M1<-matrix(rnorm(N*M,mean=0,sd=1), N, M)
M1
N = 10000
M= 1000
M1<-matrix(rnorm(N*M,mean=0,sd=1), N, M)
corr<-Corr_MIC(M1,"pearson")
Fig1<-plotdendrogram(corr,"phylogram")
corr
Fig1<-plotdendrogram(corr,"fan")
N = 5000
M= 100
M1<-matrix(rnorm(N*M,mean=0,sd=1), N, M)
corr<-Corr_MIC(M1,"pearson")
Fig1<-plotdendrogram(corr,"fan")
N = 5000
M= 500
M1<-matrix(rnorm(N*M,mean=0,sd=1), N, M)
corr<-Corr_MIC(M1,"pearson")
Fig1<-plotdendrogram(corr,"fan")
N = 5000
M= 100
M1<-matrix(rnorm(N*M,mean=0,sd=1), N, M)
corr<-Corr_MIC(M1,"pearson")
Fig1<-plotdendrogram(corr,"fan")
N = 50000
M= 100
M1<-matrix(rnorm(N*M,mean=0,sd=1), N, M)
corr<-Corr_MIC(M1,"pearson")
Fig1<-plotdendrogram(corr,"fan")
N = 100000
M= 100
M1<-matrix(rnorm(N*M,mean=0,sd=1), N, M)
corr<-Corr_MIC(M1,"pearson")
Fig1<-plotdendrogram(corr,"fan")
ptm <- proc.time()
corr<-Corr_MIC(M1,"pearson")
Fig1<-plotdendrogram(corr,"fan")
proc.time() - ptm
1.432+0.044
help(package="AMADA")
install.packages("GGally")
library("GGally", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(diamonds, package="ggplot2")
diamonds.samp <- diamonds[sample(1:dim(diamonds)[1],200),]
# Custom Example
pm <- ggpairs(
diamonds.samp[,1:3],
upper = list(continuous = "density", combo = "box"),
lower = list(continuous = "points", combo = "dot"),
color = "cut",
title = "Diamonds"
)
pm
pm <- ggpairs(
diamonds.samp[,1:3],
upper = list(continuous = "density", combo = "box"),
lower = list(continuous = "density", combo = "dot"),
color = "cut",
title = "Diamonds"
)
pm
ggpairs(
diamonds.samp[,1:3],
upper = list(continuous = "density", combo = "box"),
lower = list(continuous = "density"),
color = "cut",
title = "Diamonds"
)
ggpairs(
diamonds.samp[,1:3],
upper = list(continuous = "density"),
lower = list(continuous = "density"),
color = "cut",
title = "Diamonds"
)
ggpairs(
iris[,1:4],
upper = list(continuous = "density"),
lower = list(continuous = "density"),
color = "cut",
title = "Diamonds"
)
ggpairs(
iris[,1:4],
upper = list(continuous = "density"),
lower = list(continuous = "density")
)
ggpairs(
iris[,1:4],
upper = list(continuous = "cor"),
lower = list(continuous = "density")
)
pm <- ggpairs(
iris[,1:4],
upper = list(continuous = "cor"),
lower = list(continuous = "density"),
diag=list("density")
)
pm
ggpairs(
iris[,1:4],
upper = list(continuous = "cor"),
lower = list(continuous = "density"),
diag=list("bar'")
)
pm <- ggpairs(
iris[,1:4],
diag=list("bar"),
upper = list(continuous = "cor"),
lower = list(continuous = "density")
)
pm
pm <- ggpairs(
iris[,1:4],
diag=list("bar"),
upper = list(continuous = "cor"),
lower = list(continuous = "hist")
)
pm
pm <- ggpairs(
iris[,1:4],
diag=list("continuous"),
upper = list(continuous = "cor"),
lower = list(continuous = "density")
)
pm
install.packages("R1magic")
library(R1magic)#  Signal components
N <- 100
# Sparse components
K <- 4
#  Up to Measurements  > K LOG (N/K)
M <- 40
# Measurement Matrix (Random Sampling Sampling)
phi <- GaussianMatrix(N,M)
# R1magic generate random signal
xorg <- sparseSignal(N, K, nlev=1e-3)
y <- phi %*% xorg ;# generate measurement
T <- diag(N) ;# Do identity transform
p <- matrix(0, N, 1) ;# initial guess
# R1magic Convex Minimization ! (unoptimized-parameter)
ll <- solveL1(phi, y, T, p)
x1 <- ll$estimate
plot( 1:100, seq(0.011,1.1,0.011), type = “n”,xlab=””,ylab=””)
title(main=”Random Sparse Signal Recovery”,
xlab=”Signal Component”,ylab=”Spike Value”)
lines(1:100, xorg , col = “red”)
lines(1:100, x1, col = “blue”, cex = 1.5)
# shifted by 5 for clearity
library(R1magic)#  Signal components
N <- 100
# Sparse components
K <- 4
#  Up to Measurements  > K LOG (N/K)
M <- 40
# Measurement Matrix (Random Sampling Sampling)
phi <- GaussianMatrix(N,M)
# R1magic generate random signal
xorg <- sparseSignal(N, K, nlev=1e-3)
y <- phi %*% xorg ;# generate measurement
T <- diag(N) ;# Do identity transform
p <- matrix(0, N, 1) ;# initial guess
# R1magic Convex Minimization ! (unoptimized-parameter)
ll <- solveL1(phi, y, T, p)
x1 <- ll$estimate
plot( 1:100, seq(0.011,1.1,0.011), type = "n",xlab="",ylab="")
title(main="Random Sparse Signal Recovery",
xlab="Signal Component",ylab="Spike Value")
lines(1:100, xorg , col = "red")
lines(1:100, x1, col = “blue”, cex = 1.5)
# shifted by 5 for clearity
library(R1magic)#  Signal components
N <- 100
# Sparse components
K <- 4
#  Up to Measurements  > K LOG (N/K)
M <- 40
# Measurement Matrix (Random Sampling Sampling)
phi <- GaussianMatrix(N,M)
# R1magic generate random signal
xorg <- sparseSignal(N, K, nlev=1e-3)
y <- phi %*% xorg ;# generate measurement
T <- diag(N) ;# Do identity transform
p <- matrix(0, N, 1) ;# initial guess
# R1magic Convex Minimization ! (unoptimized-parameter)
ll <- solveL1(phi, y, T, p)
x1 <- ll$estimate
plot( 1:100, seq(0.011,1.1,0.011), type = "n",xlab="",ylab="")
title(main="Random Sparse Signal Recovery",
xlab="Signal Component",ylab="Spike Value")
lines(1:100, xorg , col = "red")
lines(1:100, x1, col = "blue", cex = 1.5)
xorg
x1
phi
y
diag(N)
matrix(0, N, 1)
5.226/2.760
1.893478*0.74
#  Required libraries
library(rjags)
library(ggmcmc)
library(ggplot2)
library(ggthemes)
library(pander)
library(Cairo)
library(plyr)
library(MASS)
library(scales)
library(plyr)
require(gdata)
require(runjags)
require(gdata)
require(caret)
require(pROC)
require(plyr)
require(LOGIT)
require(usdm)
library(lme4)
library(nlme)
library(arm)
require(gam)
require(glmnet)
require(AMADA)
#Read the  dataset
data.1= read.table(file="FiBY_escape_data_all.dat",header=FALSE)
colnames(data.1)<-c("redshift","fEsc","Mvir","Mstar","Mgas","QHI","sfr_gas",
"sfr_stars","ssfr_gas","ssfr_stars","baryon_fraction",
"spin","age_star_mean","age_star_max","age_star_min","NH_10")
#trainIndex <- createDataPartition(data.1$redshift, p = .25,
#                                  list = FALSE,
#                                  times = 1)
data.2<-data.1[data.1$redshift<=12,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2,th=0.65)
setwd("~/Dropbox/artigos/Meusartigos/IAA-WGC/Github/Beta_regression")
#Read the  dataset
data.1= read.table(file="FiBY_escape_data_all.dat",header=FALSE)
colnames(data.1)<-c("redshift","fEsc","Mvir","Mstar","Mgas","QHI","sfr_gas",
"sfr_stars","ssfr_gas","ssfr_stars","baryon_fraction",
"spin","age_star_mean","age_star_max","age_star_min","NH_10")
#trainIndex <- createDataPartition(data.1$redshift, p = .25,
#                                  list = FALSE,
#                                  times = 1)
data.2<-data.1[data.1$redshift<=12,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2,th=0.65)
plotdendrogram(cor1,type="f")
plotdendrogram(cor1,type="c")
data.2$Y<-(data.2$fEsc*(N-1)+0.5)/N
data.2$Y[data.2$Y>=0.1]<-1
data.2$Y[data.2$Y<0.1]<-0
#data.2$Y<-as.factor(data.2$Y)
vifcor(data.2[,c("Mvir","baryon_fraction","ssfr_gas","age_star_mean","spin","NH_10")],th=0.7)
x<-data.2[,c("Mvir","baryon_fraction","ssfr_gas","age_star_mean","spin","NH_10")]
#cor<-Corr_MIC(x,"pearson")
#plotgraph(cor)
# Prepare data for JAGS
data.2$Mstar<-(data.2$Mstar-mean(data.2$Mstar))/sd(data.2$Mstar)
data.2$Mgas<-(data.2$Mgas-mean(data.2$Mgas))/sd(data.2$Mgas)
data.2$Mvir<-(data.2$Mvir-mean(data.2$Mvir))/sd(data.2$Mvir)
data.2$sfr_gas<-(data.2$sfr_gas-mean(data.2$sfr_gas))/sd(data.2$sfr_gas)
data.2$baryon_fraction<-(data.2$baryon_fraction-mean(data.2$baryon_fraction))/sd(data.2$baryon_fraction)
data.2$QHI<-(data.2$QHI-mean(data.2$QHI))/sd(data.2$QHI)
data.2$ssfr_gas<-(data.2$ssfr_gas-mean(data.2$ssfr_gas))/sd(data.2$ssfr_gas)
data.2$age_star_mean<-(data.2$age_star_mean-mean(data.2$age_star_mean))/sd(data.2$age_star_mean)
data.2$spin<-(data.2$spin-mean(data.2$spin))/sd(data.2$spin)
data.2$NH_10<-(data.2$NH_10-mean(data.2$NH_10))/sd(data.2$NH_10)
data.2$sfr_stars<-(data.2$sfr_stars-mean(data.2$sfr_stars))/sd(data.2$sfr_stars)
plotgraph(cor1)
plotgraph(cor1,layout="c")
plotgraph(cor1,layout="s")
plotdendrogram(cor1,type="c")
plotdendrogram(cor1,type="p")
vifcor(data.2,th=0.6)
vifcor(data.2[,-2],th=0.6)
data.2<-data.1[data.1$redshift<=15,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2[,-2],th=0.6)
data.2<-data.1[data.1$redshift<=25,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2[,-2],th=0.6)
data.2<-data.1[data.1$redshift<=50,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2[,-2],th=0.6)
data.2<-data.1[data.1$redshift<=50,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2[,-2],th=0.6)
data.2<-data.1[data.1$redshift<=20,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2[,-2],th=0.6)
vifcor(data.2[,-2],th=0.9)
vifcor(data.2[,-2],th=0.85)
vifcor(data.2[,-2],th=0.80)
1/0.8
data.2[1,]
vifcor(data.2[,c(-1,-2)],th=0.80)
data.2$Mstar<-(data.2$Mstar-mean(data.2$Mstar))/sd(data.2$Mstar)
data.2$Mgas<-(data.2$Mgas-mean(data.2$Mgas))/sd(data.2$Mgas)
data.2$Mvir<-(data.2$Mvir-mean(data.2$Mvir))/sd(data.2$Mvir)
data.2$sfr_gas<-(data.2$sfr_gas-mean(data.2$sfr_gas))/sd(data.2$sfr_gas)
data.2$ssfr_stars<-(data.2$ssfr_stars-mean(data.2$ssfr_stars))/sd(data.2$ssfr_stars)
data.2$baryon_fraction<-(data.2$baryon_fraction-mean(data.2$baryon_fraction))/sd(data.2$baryon_fraction)
data.2$QHI<-(data.2$QHI-mean(data.2$QHI))/sd(data.2$QHI)
data.2$ssfr_gas<-(data.2$ssfr_gas-mean(data.2$ssfr_gas))/sd(data.2$ssfr_gas)
data.2$age_star_mean<-(data.2$age_star_mean-mean(data.2$age_star_mean))/sd(data.2$age_star_mean)
data.2$spin<-(data.2$spin-mean(data.2$spin))/sd(data.2$spin)
data.2$NH_10<-(data.2$NH_10-mean(data.2$NH_10))/sd(data.2$NH_10)
data.2$sfr_stars<-(data.2$sfr_stars-mean(data.2$sfr_stars))/sd(data.2$sfr_stars)
data.2$age_star_max<-(data.2$age_star_max-mean(data.2$age_star_max))/sd(data.2$age_star_max)
data.2$age_star_min<-(data.2$age_star_min-mean(data.2$age_star_min))/sd(data.2$age_star_min)
data.2<-data.1[data.1$redshift<=20,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2[,c(-1,-2)],th=0.80)
#data.2<-data.1[trainIndex,]
#data.2<-data.1[data.1$redshift==8.86815,]
#data.2<-data.1
N<-nrow(data.2)
data.2$Y<-(data.2$fEsc*(N-1)+0.5)/N
data.2$Y[data.2$Y>=0.1]<-1
data.2$Y[data.2$Y<0.1]<-0
#data.2$Y<-as.factor(data.2$Y)
# Prepare data
data.2$Mstar<-(data.2$Mstar-mean(data.2$Mstar))/sd(data.2$Mstar)
data.2$Mgas<-(data.2$Mgas-mean(data.2$Mgas))/sd(data.2$Mgas)
data.2$Mvir<-(data.2$Mvir-mean(data.2$Mvir))/sd(data.2$Mvir)
data.2$sfr_gas<-(data.2$sfr_gas-mean(data.2$sfr_gas))/sd(data.2$sfr_gas)
data.2$ssfr_stars<-(data.2$ssfr_stars-mean(data.2$ssfr_stars))/sd(data.2$ssfr_stars)
data.2$baryon_fraction<-(data.2$baryon_fraction-mean(data.2$baryon_fraction))/sd(data.2$baryon_fraction)
data.2$QHI<-(data.2$QHI-mean(data.2$QHI))/sd(data.2$QHI)
data.2$ssfr_gas<-(data.2$ssfr_gas-mean(data.2$ssfr_gas))/sd(data.2$ssfr_gas)
data.2$age_star_mean<-(data.2$age_star_mean-mean(data.2$age_star_mean))/sd(data.2$age_star_mean)
data.2$spin<-(data.2$spin-mean(data.2$spin))/sd(data.2$spin)
data.2$NH_10<-(data.2$NH_10-mean(data.2$NH_10))/sd(data.2$NH_10)
data.2$sfr_stars<-(data.2$sfr_stars-mean(data.2$sfr_stars))/sd(data.2$sfr_stars)
data.2$age_star_max<-(data.2$age_star_max-mean(data.2$age_star_max))/sd(data.2$age_star_max)
data.2$age_star_min<-(data.2$age_star_min-mean(data.2$age_star_min))/sd(data.2$age_star_min)
x2<-as.matrix(data.2[,c("Mstar","Mgas","ssfr_gas","ssfr_stars","baryon_fraction","spin","age_star_max","age_star_min","NH_10")])
fit<-glmnet(x2,y=data.2$Y,alpha=1,family="binomial")
plot(fit,xvar="lambda",label = TRUE)
plot(fit, xvar = "dev", label = TRUE)
cv.glmmod <- cv.glmnet(x2,y=data.2$Y,alpha=1,family="binomial",type.measure = "auc")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
coef.min
coef.min = coef(cv.glmmod, s = "lambda.min")
active.min = coef.min[which(abs(coef.min) > 0.05)]
active.min
best_lambda
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
active.min = coef.min[which(abs(coef.min) > 0.05)]
active.min
data.2<-data.1[data.1$redshift<=20,]
# Exploratory plot AMADA correlations
cor1<-Corr_MIC(data.2[,-2],method="pearson")
plotdendrogram(cor1,type="p")
vifcor(data.2[,c(-1,-2)],th=0.80)
#data.2<-data.1[trainIndex,]
#data.2<-data.1[data.1$redshift==8.86815,]
#data.2<-data.1
N<-nrow(data.2)
data.2$Y<-(data.2$fEsc*(N-1)+0.5)/N
data.2$Y[data.2$Y>=0.5]<-1
data.2$Y[data.2$Y<0.5]<-0
#data.2$Y<-as.factor(data.2$Y)
# Prepare data
data.2$Mstar<-(data.2$Mstar-mean(data.2$Mstar))/sd(data.2$Mstar)
data.2$Mgas<-(data.2$Mgas-mean(data.2$Mgas))/sd(data.2$Mgas)
data.2$Mvir<-(data.2$Mvir-mean(data.2$Mvir))/sd(data.2$Mvir)
data.2$sfr_gas<-(data.2$sfr_gas-mean(data.2$sfr_gas))/sd(data.2$sfr_gas)
data.2$ssfr_stars<-(data.2$ssfr_stars-mean(data.2$ssfr_stars))/sd(data.2$ssfr_stars)
data.2$baryon_fraction<-(data.2$baryon_fraction-mean(data.2$baryon_fraction))/sd(data.2$baryon_fraction)
data.2$QHI<-(data.2$QHI-mean(data.2$QHI))/sd(data.2$QHI)
data.2$ssfr_gas<-(data.2$ssfr_gas-mean(data.2$ssfr_gas))/sd(data.2$ssfr_gas)
data.2$age_star_mean<-(data.2$age_star_mean-mean(data.2$age_star_mean))/sd(data.2$age_star_mean)
data.2$spin<-(data.2$spin-mean(data.2$spin))/sd(data.2$spin)
data.2$NH_10<-(data.2$NH_10-mean(data.2$NH_10))/sd(data.2$NH_10)
data.2$sfr_stars<-(data.2$sfr_stars-mean(data.2$sfr_stars))/sd(data.2$sfr_stars)
data.2$age_star_max<-(data.2$age_star_max-mean(data.2$age_star_max))/sd(data.2$age_star_max)
data.2$age_star_min<-(data.2$age_star_min-mean(data.2$age_star_min))/sd(data.2$age_star_min)
x2<-as.matrix(data.2[,c("Mstar","Mgas","ssfr_gas","ssfr_stars","baryon_fraction","spin","age_star_max","age_star_min","NH_10")])
fit<-glmnet(x2,y=data.2$Y,alpha=1,family="binomial")
plot(fit,xvar="lambda",label = TRUE)
plot(fit, xvar = "dev", label = TRUE)
cv.glmmod <- cv.glmnet(x2,y=data.2$Y,alpha=1,family="binomial",type.measure = "auc")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
active.min = coef.min[which(abs(coef.min) > 0.05)]
index.min = coef.min[active.min]
coef.min
plot(cv.glmmod)
active.min
x2
x2[1,]
cv.glmmod <- cv.glmnet(x2-1,y=data.2$Y,alpha=1,family="binomial",type.measure = "auc")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
coef.min
cv.glmmod <- cv.glmnet(x2,y=data.2$Y,alpha=1,family="binomial",type.measure = "auc")
plot(cv.glmmod)
best_lambda <- cv.glmmod$lambda.min
coef.min = coef(cv.glmmod, s = "lambda.min")
coef.min
exp(-20)/(1+exp(-20))
formula2 = Y~Mstar+Mgas+ssfr_gas+ssfr_stars+baryon_fraction+spin+age_star_max+age_star_min+NH_10
mod.2 = inla(formula2,data=data.2,family="binomial"
)
require(INLA)
install.packages("INLA")
install.packages("INLA", repos="http://www.math.ntnu.no/inla/R/stable")
require(INLA)
formula2 = Y~Mstar+Mgas+ssfr_gas+ssfr_stars+baryon_fraction+spin+age_star_max+age_star_min+NH_10
mod.2 = inla(formula2,data=data.2,family="binomial"
)
plot(mod.2)
summary(mod.2)
plot(mod.2)
hyper = inla.hyperpar(mod.2)
summary(hyper)
plot(hyper)
summary(hyper)
plot(hyper)
plot(hyper)
hyper
summary(hyper)
mod.2
formula2
data.2[1,]
mod.2 = inla(formula2,data=data.2[,c(-1,-2)],family="binomial")
plot(mod.2)
hyper = inla.hyperpar(mod.2)
summary(hyper)
plot(hyper)
